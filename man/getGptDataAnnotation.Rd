% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getGptDataAnnotation.R
\name{getGptDataAnnotation}
\alias{getGptDataAnnotation}
\title{Get GPT Data Annotation for a Single Row}
\usage{
getGptDataAnnotation(
  data.row,
  sys.prompt,
  user.prompt.template,
  prompt.fields,
  gpt.model,
  api.token,
  api.base.url = "https://api-gpt.jrc.ec.europa.eu/",
  temperature = 0
)
}
\arguments{
\item{data.row}{A single row data frame with data to process}

\item{sys.prompt}{System prompt for the GPT chat}

\item{user.prompt.template}{User prompt template with {{field}} placeholders}

\item{prompt.fields}{Character vector of field names to use in the prompt}

\item{gpt.model}{Model identifier string}

\item{api.token}{API token for authentication}

\item{api.base.url}{Base URL for the API (default: JRC endpoint)}

\item{temperature}{Temperature parameter for the model (default: 0)}
}
\value{
The input row with added llm_response, model, api_call_timestamp,
  and error columns
}
\description{
Processes a single row of data through GPT to add annotations, classifications,
or other derived information. Useful for enhancing event datasets with
custom categories before performing narrative analysis.
}
\examples{
\dontrun{
# Example: Classify conflict events by cooperation/conflict type
event.df <- data.frame(
  event_date = "2024-01-15",
  actor1 = "France",
  actor2 = "Russia",
  description = "France’s foreign ministry said Tuesday that Russia’s military
  intelligence has long orchestrated cyberattacks on French entities."
)

sys.prompt <- "You are an expert in conflict analysis. Classify events based on
the nature of interaction between actors using these categories: 'verbal cooperation',
'material cooperation', 'verbal conflict', or 'material conflict'."

user.template <- "Event date: {{event_date}}
Actors: {{actor1}} and {{actor2}}
Description: {{description}}

Classify this interaction as one of: verbal cooperation, material cooperation,
verbal conflict, or material conflict. Respond with only the classification."

getGptDataAnnotation(
  data.row = event.df,
  sys.prompt = sys.prompt,
  user.prompt.template = user.template,
  prompt.fields = c("event_date", "actor1", "actor2", "description"),
  gpt.model = "gpt-4o-mini",
  api.token = "your_token"
)
}

}
