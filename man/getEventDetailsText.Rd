% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getEventDetailsText.R
\name{getEventDetailsText}
\alias{getEventDetailsText}
\title{Extract and Format Text from Event Data}
\usage{
getEventDetailsText(
  event.df,
  text.cols = c("event_date", "event_type", "notes"),
  dedup.cols = NULL,
  text.format = "Date: {event_date}\\nType: {event_type}\\nDescription: {notes}",
  sort.col = "event_date",
  sort.ascending = TRUE
)
}
\arguments{
\item{event.df}{A data.frame containing event data}

\item{text.cols}{Character vector specifying columns to include in text
output (default: c("event_date", "event_type", "notes"))}

\item{dedup.cols}{Character vector specifying columns to use for
deduplication (default: same as text.cols)}

\item{text.format}{Character string with glue-style formatting template
(default: ACLED format)}

\item{sort.col}{Character string specifying column to sort by
(default: "event_date")}

\item{sort.ascending}{Logical indicating sort direction (default: TRUE)}
}
\value{
Character vector containing formatted text descriptions, one per
  unique event
}
\description{
This function extracts and formats narrative descriptions from event data,
with customizable column selection, deduplication, and text formatting.
Designed to work with output from getEventDataByPeriods() or any event data.frame.
}
\examples{
\dontrun{
# Example 1: Default ACLED formatting
text.output <- getEventDetailsText(event.df = period.data)

# Example 2: Custom ACLED format with more details
text.output <- getEventDetailsText(
  event.df = period.data,
  text.cols = c("event_date", "event_type", "actor1", "actor2", "fatalities", "notes"),
  text.format = "Date: {event_date}\nType: {event_type}\nActors: {actor1} vs {actor2}\nFatalities: {fatalities}\nDescription: {notes}"
)

# Example 3: UCDP-GED format
text.output <- getEventDetailsText(
  event.df = ucdp.data,
  text.cols = c("date_start", "conflict_name", "deaths_total", "adm_1"),
  dedup.cols = c("date_start", "conflict_name", "adm_1"),
  text.format = "Date: {date_start}\nConflict: {conflict_name}\nDeaths: {deaths_total}\nLocation: {adm_1}",
  sort.col = "date_start"
)

# Example 4: Simple format for quick overview
text.output <- getEventDetailsText(
  event.df = event.data,
  text.cols = c("event_date", "event_type"),
  text.format = "{event_date}: {event_type}"
)

# Usage with getEventDataByPeriods output
period.result <- getEventDataByPeriods(...)
period.texts.ls <- purrr::map(period.result$period.data, getEventDetailsText)
}

}
