% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getEventCountText.R
\name{getEventCountText}
\alias{getEventCountText}
\title{Process Conflict Event Data for LLM Analysis}
\usage{
getEventCountText(
  event.df,
  start.date,
  end.date = NULL,
  event.date.col,
  ctry.id.col,
  ctry.id,
  event.type.col = NULL,
  fatalities.col = NULL,
  use.ctry.regex = TRUE,
  by.event.type = TRUE,
  output.as.text = TRUE
)
}
\arguments{
\item{event.df}{data.frame. Conflict event data.}

\item{start.date}{Date or YYYY-MM-DD. Start date for filtering events.}

\item{end.date}{Date, YYYY-MM-DD, or NULL. End date for filtering events.
If NULL, all events from start.date onwards are included.}

\item{event.date.col}{character. Column name containing event dates.}

\item{ctry.id.col}{character. Column name containing country identifiers.}

\item{ctry.id}{character vector. Country identifier(s) to filter by.}

\item{event.type.col}{character or NULL. Column name containing event type
information. Required only when `by.event.type = TRUE`. Default NULL.}

\item{fatalities.col}{character or NULL. Column name containing fatality
counts. If provided, fatality totals will be included in output. Default NULL.}

\item{use.ctry.regex}{logical. If TRUE, uses regex matching for country
filtering; if FALSE, uses exact matching. Default TRUE.}

\item{by.event.type}{logical. If TRUE, results include event counts by event
type. If FALSE, only return total event counts (across all event types).
Default TRUE.}

\item{output.as.text}{logical. If TRUE (default), returns formatted text
summaries. If FALSE, returns the aggregated data.frame.}
}
\value{
If `output.as.text = TRUE`, a named character vector where each element
contains a formatted text summary of event counts by type and country for
the specified time period. If `output.as.text = FALSE`, a tidy data.frame
with event counts by country, type, and date range.
}
\description{
This function preprocesses conflict event datasets (e.g., ACLED, UCDP) by
filtering, aggregating, and formatting the data into either structured tables
or human-readable text summaries suitable for Large Language Model (LLM)
processing.
}
\examples{
\dontrun{
# Example with ACLED data, including fatalities
result <- getEventCountText(
  event.df = acled.df,
  start.date = "2023-01-01",
  end.date = "2023-12-31",
  event.date.col = "event_date",
  ctry.id.col = "country",
  ctry.id = "Nigeria",
  event.type.col = "event_type",
  fatalities.col = "fatalities"
)

# Example without event types, just totals
result <- getEventCountText(
  event.df = acled.df,
  start.date = "2023-01-01",
  end.date = "2023-12-31",
  event.date.col = "event_date",
  ctry.id.col = "country",
  ctry.id = "Nigeria",
  by.event.type = FALSE
)
}

}
